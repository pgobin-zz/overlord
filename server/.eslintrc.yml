parserOptions:
  ecmaVersion: 8
  sourceType: module

rules:
  curly: [error, multi-or-nest, consistent]
  default-case: error
  dot-notation: error
  eqeqeq: [error, smart]
  max-classes-per-file: error
  no-else-return: error
  no-extra-bind: error
  no-global-assign: error
  no-return-await: error
  no-redeclare: error
  no-useless-return: error
  array-bracket-spacing: [error, never]
  block-spacing: error
  brace-style: error
  comma-dangle: [error, always-multiline]
  comma-spacing: error
  computed-property-spacing: error
  eol-last: error
  indent: [error, 2, { SwitchCase: 1 }]
  key-spacing: [error, { mode: minimum }]
  linebreak-style: error
  lines-around-comment: error
  max-len: [error, { code: 100, tabWidth: 2 }]
  no-trailing-spaces: error
  no-unneeded-ternary: error
  no-unreachable: error
  valid-jsdoc: [error, {
    requireReturn: false,
    prefer: { return: returns },
    requireReturnDescription: false,
  }]
  prefer-object-spread: error
  quotes: [error, single]
  semi: [error, never]
  require-jsdoc: [error, {
    require: {
      FunctionDeclaration: false,
      MethodDefinition: true,
      ClassDeclaration: true,
      ArrowFunctionExpression: false,
      FunctionExpression: false,
    }
  }]
  no-debugger: error
  no-console: [error, { allow: [warn, error, info] }]
  no-empty: error
  no-extra-boolean-cast: error
  no-mixed-operators: error
  no-tabs: error
  space-before-function-paren: error
  arrow-spacing: error
  generator-star-spacing: [error, { before: true, after: true }]
  no-var: error
  object-shorthand: error
  prefer-arrow-callback: error
  prefer-const: error
  keyword-spacing: [error, { after: true }]
  space-infix-ops: error
